TESTO ESERCIZIO:
ia dato il problema del tabaccaio e dei fumatori. Ogni fumatore esegue ripetutamente un
ciclo in cui prepara la sigaretta e poi la fuma. Per preparare una sigaretta ogni fumatore
ha bisogno di:
� tabacco;
� carta;
� fiammiferi.
Ogni fumatore possiede un solo elemento in quantit� illimitata. In particolare,
� il fumatore F1 possiede il tabacco;
� il fumatore F2 possiede la carta;
� il fumatore F3 possiede i fiammiferi.
Presso la tabaccheria vi � una quantit� infinita di tutti e tre gli elementi. Vi sono tre
impiegati, I1, I2 e I3, ognuno responsabile di una solo elemento: tabacco, carta e
fiammiferi. Due impiegati alla volta vengono scelti a caso e mettono a disposizione
l'elemento di cui sono responsabili. Il fumatore che possiede il terzo elemento pu�
prelevare gli altri due, prepara la sigaretta e la fuma. Quando termina lo segnala agli
impiegati i quali ripetono il processo.
Si implementi una soluzione che modelli l'attivit� descritta in C, Java, o pseudo-codice
(SOLO per i non iscritti in Ingegneria Informatica) e si descriva la sincronizzazione tra i
processi. Si discuta inoltre se la soluzione proposta pu� presentare rinvio indefinito e/o
deadlock.

def tabacco 0
def cartine 1
def filtro 2
def fiammiferi 3

var :
	bancone[4] : array di int (:=0)
	bancone_pronto : semaforo binario (:=0)
	bancone_libero : semaforo binario (:=0)
	elementi{100,120,80,130} : var int

tabaccaio()
repeat
	i=0
	repeat
		j=rand%3
		if (bancone[j]==0) then
			bancone[j]=1
			i++
			elementi[j]--
		end if
	until (i<3)
	signal(bancone_pronto)
	wait(bancone_libero)
until ( elementi[0]>0 && elementi[1]>0 && elementi[2]>0 && elementi[3]>0)



fumatore(elem)
repeat
	wait(bancone_pronto)
	if (bancone[elem]==1) then
		signal(bancone_pronto)
	else
		preleva elementi dal bancone
		fuma
		signal(bancone_libero)
	endif
forever