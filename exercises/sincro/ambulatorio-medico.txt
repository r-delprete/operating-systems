/**
* Si consideri il seguente problema: In un ambulatorio medico lavorano due medici 
* ed un infermiere. Inizialmente i due medici sono in attesa dell'arrivo dei pazienti. 
* Un paziente entra nell'ambulatorio e si reca dal primo medico libero che esegue 
* la visita medica. Al termine della visita, il medico redige un referto che inserisce in 
* un portadocumenti con M posizioni. L'infermiere preleva un referto alla volta e lo 
* inserisce nel database dell'ambulatorio. Se entrambi i medici sono impegnati, il 
* paziente si accomoda nella sala d'aspetto che dispone di N sedie. Se le N sedie 
* sono tutte occupate, il paziente lascia I'ambulatorio.
*/

medici: sem contatore = 2
infermiere: sem binario = 1
pazienti: int = 0
mutex_paz: mutex = 1
in_attesa: sem contatore = 0
fine_visita: sem binario = 0
portadocs[M]: int = { 0 }
index_write: int = 0
index_read: int = 0
mutex_portadocs: mutex = 1
sedie: int = N
mutex_sedie: mutex = 1
produci_referto: sem contatore = M
referto_pronto: sem binario = 0

paziente_process() {
  lock(mutex_sedie)
  if (sedie > 0) {
    sedie--
    unlock(mutex_sedie)

    lock(mutex_paz)
    pazienti++
    unlock(mutex_paz)

    wait(medici)

    signal(in_attesa)

    wait(fine_visita)
    
    lock(mutex_paz)
    pazienti--
    unlock(mutex_paz)

    exit(0)
  } else {
    unlock(mutex_sedie)
    exit()
  }
}

medico_process() {
  while(1) {
    wait(in_attesa)

    visita_paziente()

    signal(fine_visita)

    signal(medici)

    wait(produci_referto)

    referto = produci_referto()

    lock(mutex_portadocs)
    portadocs[index_write] = referto
    index_write = 1 + index_write % M
    unlock(mutex_portadocs)

    wait(infermiere)

    signal(referto_pronto)
  }
}

infermiere_process() {
  while(1) {
    wait(referto_pronto)

    lock(mutex_portadocs)
    aggiorna_db(portadocs[index_read])
    index_read = 1 - index_read % M
    unlock(mutex_portadocs)

    signal(produci_referto)

    signal(infermiere)
  }
}